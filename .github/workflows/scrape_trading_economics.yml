name: Scrape Trading Economics Data
on:
  workflow_dispatch: # Manual trigger with timestamp input
    inputs:
      timestamp:
        description: 'Timestamp for the data scrape (format: YYYYMMDD_HHMM)'
        required: true
        default: '20250915_0932'

jobs:
  scrape-trading-economics:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install Chrome and ChromeDriver
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        echo "Installed Chrome version:"
        google-chrome --version
        CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+' || echo "")
        echo "Extracted Chrome version: $CHROME_VERSION"
        # Remove existing ChromeDriver to avoid version conflicts
        sudo rm -f /usr/local/bin/chromedriver
        if [ -z "$CHROME_VERSION" ]; then
          echo "Falling back to latest ChromeDriver version"
          CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE || echo "")
        else
          CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION || echo "")
          if [ -z "$CHROMEDRIVER_VERSION" ] || [[ "$CHROMEDRIVER_VERSION" == *"Error"* ]]; then
            echo "No specific ChromeDriver version found, trying major version: ${CHROME_VERSION%%.*}"
            CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION%%.*} || echo "")
          fi
        fi
        if [ -z "$CHROMEDRIVER_VERSION" ] || [[ "$CHROMEDRIVER_VERSION" == *"Error"* ]]; then
          echo "No ChromeDriver version found, falling back to a known version"
          CHROMEDRIVER_VERSION="140.0.7339.82"  # Recommended version for Chrome 140.0.7339.80
        fi
        echo "Selected ChromeDriver version: $CHROMEDRIVER_VERSION"
        # Validate the version by checking if the file exists
        if curl -s --head https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip | head -n 1 | grep "HTTP/1.1 200 OK" > /dev/null; then
          wget -q --tries=3 --timeout=10 https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
        else
          echo "ChromeDriver version $CHROMEDRIVER_VERSION not found, trying latest available version"
          CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE || echo "")
          if [ -z "$CHROMEDRIVER_VERSION" ] || [[ "$CHROMEDRIVER_VERSION" == *"Error"* ]]; then
            echo "Warning: Could not determine a valid ChromeDriver version. Continuing without ChromeDriver."
            echo "This may cause the scraping step to fail."
            touch chromedriver  # Create a dummy file to allow the workflow to continue
            exit 0
          fi
          wget -q --tries=3 --timeout=10 https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip || {
            echo "Failed to download ChromeDriver version $CHROMEDRIVER_VERSION"
            echo "Warning: Continuing without ChromeDriver."
            touch chromedriver
            exit 0
          }
        fi
        unzip -o chromedriver_linux64.zip
        sudo mv chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        chromedriver --version || echo "Warning: ChromeDriver version check failed."
        # Clean up any stray Chrome or ChromeDriver processes
        pkill -f chromedriver || true
        pkill -f chrome || true
      continue-on-error: true
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install selenium beautifulsoup4
      continue-on-error: false
    - name: Create data directory
      run: mkdir -p data/${{ github.event.inputs.timestamp }}/Trading_Economics
    - name: Run Trading Economics scrape script
      run: |
        python -c "
        import os
        import glob
        import shutil
        timestamp = '${{ github.event.inputs.timestamp }}'
        print(f'Running scrape_trading_economics.py with timestamp: {timestamp}')
        os.makedirs(f'data/{timestamp}/Trading_Economics', exist_ok=True)
        rc = os.system('python scrape_trading_economics.py')
        if rc != 0:
            print('Warning: scrape_trading_economics.py may have encountered issues')
        # Move CSVs to timestamped Trading_Economics directory
        csv_files = glob.glob('*.csv')
        if csv_files:
            for csv_file in csv_files:
                shutil.move(csv_file, f'data/{timestamp}/Trading_Economics/{csv_file}')
            print(f'Moved {len(csv_files)} CSVs to data/{timestamp}/Trading_Economics/')
        else:
            print('No CSVs to move')
        # Move page source files for debugging
        html_files = glob.glob('*.html')
        if html_files:
            for html_file in html_files:
                shutil.move(html_file, f'data/{timestamp}/Trading_Economics/{html_file}')
            print(f'Moved {len(html_files)} HTML page source files to data/{timestamp}/Trading_Economics/')
        else:
            print('No HTML page source files to move')
        "
      continue-on-error: true
    - name: Commit and push Trading Economics data
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add data
        git commit -m "Auto-update Trading Economics data for ${{ github.event.inputs.timestamp }}" || echo "No changes to commit"
        git push
    - name: Send email with Trading Economics data
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "Trading Economics Data for ${{ github.event.inputs.timestamp }}"
        to: reesjmorgan@gmail.com
        from: Morgan Rees <reesjmorgan@gmail.com>
        body: |
          Attached is the latest Trading Economics data.
          Timestamp: ${{ github.event.inputs.timestamp }}
          Note: Some data may be missing due to scraping issues.
        attachments: |
          data/${{ github.event.inputs.timestamp }}/Trading_Economics/bonds.csv
          data/${{ github.event.inputs.timestamp }}/Trading_Economics/commodities.csv
          data/${{ github.event.inputs.timestamp }}/Trading_Economics/stocks.csv
          data/${{ github.event.inputs.timestamp }}/Trading_Economics/shares_gainers.csv
          data/${{ github.event.inputs.timestamp }}/Trading_Economics/shares_losers.csv
          data/${{ github.event.inputs.timestamp }}/Trading_Economics/currencies.csv
          data/${{ github.event.inputs.timestamp }}/Trading_Economics/crypto.csv
        secure: true
      continue-on-error: true
