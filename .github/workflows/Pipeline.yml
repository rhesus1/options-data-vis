name: Process Options Data Pipeline
on:
  schedule:
    - cron: '0 21 * * 1-5' # Daily at 10:00 PM BST (9:00 PM UTC)
  workflow_dispatch: # Manual trigger option
jobs:
  process-pipeline:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install yfinance pandas numpy scipy joblib statsmodels tqdm pyxlsb
    - name: Create data directory
      run: mkdir -p data
    - name: Run fetch script
      run: python fetch_data.py
      continue-on-error: false
    - name: Commit and push raw data
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add data
        git commit -m "Auto-update raw data from scheduled fetch" || echo "No changes to commit"
        git push
    - name: Log timestamp and input files
      run: |
        python -c "
        import json
        import os
        from datetime import datetime
        try:
            with open('data/dates.json', 'r') as f:
                dates = json.load(f)
            if not dates:
                print('Error: dates.json is empty')
                exit(1)
            latest_date = max(dates, key=lambda x: datetime.strptime(x, '%Y%m%d_%H%M'))
            print(f'Running clean_data.py with timestamp: {latest_date}')
            os.system(f'ls -R data/{latest_date}/raw_yfinance* || echo \"No raw files found\"')
            os.system(f'ls -R data/{latest_date}/historic* || echo \"No historic files found\"')
        except FileNotFoundError:
            print('Error: data/dates.json not found')
            exit(1)
        "
      continue-on-error: false
    - name: Run clean script
      run: python clean_data.py
      continue-on-error: false
    - name: Log output files
      run: |
        python -c "
        import json
        import os
        from datetime import datetime
        try:
            with open('data/dates.json', 'r') as f:
                dates = json.load(f)
            if not dates:
                print('Error: dates.json is empty')
                exit(1)
            latest_date = max(dates, key=lambda x: datetime.strptime(x, '%Y%m%d_%H%M'))
            print('Cleaned files:')
            os.system(f'ls -R data/{latest_date}/cleaned_yfinance* || echo \"No cleaned files found\"')
        except FileNotFoundError:
            print('Error: data/dates.json not found')
            exit(1)
        "
      continue-on-error: false
    - name: Commit and push cleaned data
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add data
        git commit -m "Auto-update cleaned data" || echo "No changes to commit"
        git push
    - name: Run calculate script
      run: python calculate_data.py
      continue-on-error: false
    - name: Commit and push processed data
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add data
        git commit -m "Auto-update processed data" || echo "No changes to commit"
        git push
    - name: Run ranking metrics calculation
      run: |
        python -c "
        import json
        import os
        from datetime import datetime
        try:
            with open('data/dates.json', 'r') as f:
                dates = json.load(f)
            if not dates:
                print('Error: dates.json is empty')
                exit(1)
            latest_date = max(dates, key=lambda x: datetime.strptime(x, '%Y%m%d_%H%M'))
            print(f'Running calculate_ranking_metrics.py with timestamp: {latest_date}')
            rc = os.system(f'python calculate_ranking_metrics.py {latest_date}')
            if rc != 0:
                print(f'Error: calculate_ranking_metrics.py failed for {latest_date}')
                exit(1)
        except FileNotFoundError:
            print('Error: data/dates.json not found')
            exit(1)
        "
      continue-on-error: false
    - name: Commit and push ranking data
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add data
        git commit -m "Auto-update ranking metrics data" || echo "No changes to commit"
        git push
    - name: Set latest_date output
      id: set-latest-date
      run: |
        if [ -f data/dates.json ]; then
          latest_date=$(python -c "import json; from datetime import datetime; print(max(json.load(open('data/dates.json')), key=lambda x: datetime.strptime(x, '%Y%m%d_%H%M')))")
          echo "latest_date=$latest_date" >> $GITHUB_OUTPUT
        else
          echo "latest_date=" >> $GITHUB_OUTPUT
        fi
      shell: bash
      continue-on-error: false
    - name: Send email with yfinance ranking metrics
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "Options Ranking Metrics Data"
        to: reesjmorgan@gmail.com
        from: Morgan Rees <reesjmorgan@gmail.com>
        body: |
          Attached is the latest Options ranking metrics CSV file for yfinance data.
          Timestamp: ${{ steps.set-latest-date.outputs.latest_date }}
        attachments: |
          data/${{ steps.set-latest-date.outputs.latest_date }}/ranking/ranking_yfinance.csv
        secure: true
    - name: Run preprocess data script
      run: |
        python -c "
        import json
        import os
        from datetime import datetime
        try:
            with open('data/dates.json', 'r') as f:
                dates = json.load(f)
            if not dates:
                print('Error: dates.json is empty')
                exit(1)
            latest_date = max(dates, key=lambda x: datetime.strptime(x, '%Y%m%d_%H%M'))
            print(f'Running preprocess_data.py with timestamp: {latest_date}')
            rc = os.system(f'python preprocess_data.py {latest_date}')
            if rc != 0:
                print(f'Error: preprocess_data.py failed for {latest_date}')
                exit(1)
        except FileNotFoundError:
            print('Error: data/dates.json not found')
            exit(1)
        "
      continue-on-error: false
    - name: Commit and push precomputed data
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add data
        git commit -m "Auto-update precomputed tables for ${{ steps.set-latest-date.outputs.latest_date }}" || echo "No changes to commit"
        git push
    - name: Send email with precomputed tables
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "Precomputed Tables"
        to: reesjmorgan@gmail.com
        from: Morgan Rees <reesjmorgan@gmail.com>
        body: |
          Attached is the latest precomputed ranking table for yfinance data.
          Timestamp: ${{ steps.set-latest-date.outputs.latest_date }}
        attachments: |
          data/${{ steps.set-latest-date.outputs.latest_date }}/tables/ranking/ranking_table.csv
          data/${{ steps.set-latest-date.outputs.latest_date }}/tables/stock/stock_table.csv
          data/${{ steps.set-latest-date.outputs.latest_date }}/tables/summary/summary_table.csv
        secure: true
