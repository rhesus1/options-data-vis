name: Process Options Data Pipeline
on:
  schedule:
    - cron: '0 21 * * 1-5'  # Daily at 10:00 PM BST (9:00 PM UTC)
  workflow_dispatch:  # Manual trigger option
jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install yfinance pandas numpy scipy joblib statsmodels tqdm pyxlsb

  fetch:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Create data directory
      run: mkdir -p data
    - name: Run fetch script
      run: python fetch_data.py
    - name: Commit and push updated data
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add data
        git commit -m "Auto-update raw data from scheduled fetch" || echo "No changes to commit"
        git push

  clean:
    runs-on: ubuntu-latest
    needs: fetch
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Create data directory
      run: mkdir -p data
    - name: Log timestamp and input files
      run: |
        python -c "
        import json
        import os
        with open('data/dates.json', 'r') as f:
            dates = json.load(f)
        latest_date = max(dates, key=lambda x: x)
        print(f'Running clean_data.py with timestamp: {latest_date}')
        os.system(f'ls -R data/{latest_date}/raw_yfinance* || echo \"No raw files found\"')
        os.system(f'ls -R data/{latest_date}/historic* || echo \"No historic files found\"')
        "
    - name: Run clean script
      run: python clean_data.py
    - name: Log output files
      run: |
        python -c "
        import json
        import os
        with open('data/dates.json', 'r') as f:
            dates = json.load(f)
        latest_date = max(dates, key=lambda x: x)
        print('Cleaned files:')
        os.system(f'ls -R data/{latest_date}/cleaned_yfinance* || echo \"No cleaned files found\"')
        "
    - name: Commit and push updated data
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add data
        git commit -m "Auto-update cleaned data" || echo "No changes to commit"
        git push

  calculate:
    runs-on: ubuntu-latest
    needs: clean
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Create data directory
      run: mkdir -p data
    - name: Run calculate script
      run: python calculate_data.py
    - name: Commit and push updated data
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add data
        git commit -m "Auto-update processed data" || echo "No changes to commit"
        git push

  calculate-ranking:
    runs-on: ubuntu-latest
    needs: calculate
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Create data directory
      run: mkdir -p data
    - name: Run ranking metrics calculation
      run: |
        python -c "
        import json
        import os
        with open('data/dates.json', 'r') as f:
            dates = json.load(f)
        latest_date = max(dates, key=lambda x: x)
        os.system(f'python calculate_ranking_metrics.py {latest_date}')
        "
    - name: Commit and push updated ranking data
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add data
        git commit -m "Auto-update ranking metrics data" || echo "No changes to commit"
        git push
    - name: Send email with yfinance ranking metrics
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "Options Ranking Metrics Data"
        to: reesjmorgan@gmail.com
        from: Morgan Rees <reesjmorgan@gmail.com>
        body: |
          Attached is the latest Options ranking metrics CSV file for yfinance data.
          Timestamp: ${{ needs.calculate-ranking.outputs.latest_date }}
        attachments: |
          data/${{ needs.calculate-ranking.outputs.latest_date }}/ranking/ranking_yfinance.csv
        secure: true
    outputs:
      latest_date: ${{ steps.set-latest-date.outputs.latest_date }}
    - name: Set latest_date output
      id: set-latest-date
      run: |
        python -c "
        import json
        with open('data/dates.json', 'r') as f:
            dates = json.load(f)
        latest_date = max(dates, key=lambda x: x)
        print(f'::set-output name=latest_date::{latest_date}')
        "

  preprocess-data:
    runs-on: ubuntu-latest
    needs: calculate-ranking
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Create data directory
      run: mkdir -p data
    - name: Run preprocess data script
      run: |
        python -c "
        import json
        import os
        with open('data/dates.json', 'r') as f:
            dates = json.load(f)
        latest_date = max(dates, key=lambda x: x)
        os.system(f'python preprocess_data.py {latest_date}')
        "
    - name: Commit and push updated data
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add data
        git commit -m "Auto-update precomputed tables for ${{ needs.calculate-ranking.outputs.latest_date }}" || echo "No changes to commit"
        git push
    - name: Send email with precomputed tables
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "Precomputed Tables"
        to: reesjmorgan@gmail.com
        from: Morgan Rees <reesjmorgan@gmail.com>
        body: |
          Attached is the latest precomputed ranking table for yfinance data.
          Timestamp: ${{ needs.calculate-ranking.outputs.latest_date }}
        attachments: |
          data/${{ needs.calculate-ranking.outputs.latest_date }}/tables/ranking/ranking_table.csv
          data/${{ needs.calculate-ranking.outputs.latest_date }}/tables/stock/stock_table.csv
          data/${{ needs.calculate-ranking.outputs.latest_date }}/tables/summary/summary_table.csv
        secure: true
